name: create_tag

on:
  workflow_dispatch:
    inputs:
      version:
        description: target version
        type: string
        required: false
        default: latest
  schedule:
    - cron: "0 14 * * *" # 23:00+09:00
  push:
  pull_request:

env:
  ONLY_TEST: ${{github.event_name == 'pull_request' || (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))}}

jobs:
  build:
    name: Run
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ruby-3.1
      - name: Install dependencies
        run: |
          set -eux
          sudo apt-get update
          sudo apt-get install -y curl jq libarchive-tools
          bundle
      - name: Setup Git
        run: |
          set -eux
          git config --global user.name "Yuya Nishida"
          git config --global user.email "62389+nishidayuya@users.noreply.github.com"
      - name: Output versions
        run: |
          set -eux
          git --version
          bsdtar --version
          curl --version
          jq --version
          ruby --version
          gem --version
          bundle --version
          bundle list
      - name: Test
        if: ${{env.ONLY_TEST == 'true'}}
        run: |
          set -eux
          current_version="$(ruby -r./lib/pandoc_binary/version -e 'puts(PandocBinary::VERSION)')"
          ./bin/test "$current_version"
      - name: Build + Create tag
        if: ${{env.ONLY_TEST != 'true'}}
        run: |
          set -eux
          if test "${VERSION:-latest}" = "latest"
          then
            export VERSION="$(bin/get_latest_upstream_release)"
          fi
          current_version="$(ruby -r./lib/pandoc_binary/version -e 'puts(PandocBinary::VERSION)')"
          if test "$VERSION" != "$current_version"
          then
            bundle exec ./bin/update_pandoc_binary "$VERSION"
            git add .
            git commit -m "feat: automatically update from $current_version to $VERSION"
            ./bin/test "$VERSION"
            bundle exec rake release:source_control_push
          fi
        env:
          VERSION: ${{github.event.inputs.version}}
      - name: Publish to RubyGems
        if: ${{env.ONLY_TEST != 'true'}}
        run: |
          set -eux
          version="$(ruby -r./lib/pandoc_binary/version -e 'puts(PandocBinary::VERSION)')"
          if gem install -v "$version" pandoc_binary
          then
            echo 'Do not run "gem push" because that version is installable.'
          else
            gem build *.gemspec
            gem push *.gem
          fi
        env:
          GEM_HOST_API_KEY: ${{secrets.RUBYGEMS_AUTH_TOKEN}}
